####### DO NOT TOUCH #######
# MODULES 
import sys, os
import numpy as np
import pandas as pd
from scipy import stats
import matplotlib
import matplotlib.dates as mdates
from scipy.signal import savgol_filter

# PRESSION
intercept = float(df_Calibration.iloc[2][list(df_Calibration.columns)[-1]])
dUdH = float(df_Calibration.iloc[3][list(df_Calibration.columns)[-1]])
dUdT = float(df_Calibration.iloc[4][list(df_Calibration.columns)[-1]])

df_Pressure["charge_diff"] = (df_Pressure["tension"]-df_Pressure["t_stream"]*dUdT-intercept)/dUdH
df_Pressure.drop(labels="tension",axis=1,inplace=True)

df_loaded = df_Pressure.merge(df_ZH, how='outer', on="date").sort_values('date').reset_index().drop('index',axis=1)
varList = list(df_loaded.columns)
df_cleaned = df_loaded.copy().dropna() 

# TIMES
print("Here we get the tempreatures right")

# METHODS
# t_stream

# charge_diff

# t1

# t2

# t3

# t4

# MANUAL SELECTED POINTS

selected_df = pd.read_csv("selected_points.csv")

for i in varList[1:]:
    df_var = selected_df[["date",i]].dropna()
    values = df_cleaned.apply(lambda x: np.nan if mdates.date2num(x['date']) in list(mdates.date2num(df_var['date'])) else x[i],axis=1)
    df_cleaned.loc[:,i] = values

# YOU CAN TOUCH - USER DEFINED FUNCTION

# SMOOTHING
to_filter = {'t_stream': False, 'charge_diff': False, 't1': False, 't2': False, 't3': False, 't4': False}


for var in to_filter:
    if to_filter[var]:
        df_cleaned.loc[df_cleaned[var].notnull(),var] = savgol_filter(df_cleaned.loc[df_cleaned[var].notnull(),var],20,2)